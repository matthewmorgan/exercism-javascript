{"version":3,"sources":["crypto-square.spec.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;AAExC,QAAQ,CAAC,QAAQ,EAAC,YAAW;AAC3B,IAAE,CAAC,8BAA8B,EAAC,YAAW;AAC3C,QAAI,MAAM,GAAG,IAAI,MAAM,CAAC,aAAa,CAAC,CAAC;AACvC,UAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;GACvD,CAAC,CAAC;;AAEH,IAAE,CAAC,mBAAmB,EAAC,YAAW;AAChC,QAAI,MAAM,GAAG,IAAI,MAAM,CAAC,aAAa,CAAC,CAAC;AACvC,UAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;GACtD,CAAC,CAAC;;AAEH,IAAE,CAAC,sBAAsB,EAAC,YAAW;AACnC,QAAI,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;AAChC,UAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;GAClC,CAAC,CAAC;;AAEH,IAAE,CAAC,sDAAsD,EAAC,YAAW;AACnE,QAAI,MAAM,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;AACnC,UAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;GAClC,CAAC,CAAC;;AAEH,IAAE,CAAC,gCAAgC,EAAC,YAAW;AAC7C,QAAI,MAAM,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC;AACrC,UAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;GAClC,CAAC,CAAC;;AAEH,IAAE,CAAC,4BAA4B,EAAC,YAAW;AACzC,QAAI,MAAM,GAAG,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC;AACxC,UAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;GAClC,CAAC,CAAC;;AAEH,IAAE,CAAC,qBAAqB,EAAC,YAAW;AAClC,QAAI,MAAM,GAAG,IAAI,MAAM,CAAC,sCAAsC,CAAC,CAAC;AAChE,UAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;GAChG,CAAC,CAAC;;AAEH,IAAE,CAAC,qBAAqB,EAAC,YAAW;AAClC,QAAI,MAAM,GAAG,IAAI,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAC5C,UAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;GACrE,CAAC,CAAC;;AAEH,IAAE,CAAC,aAAa,EAAC,YAAW;AAC1B,QAAI,MAAM,GAAG,IAAI,MAAM,CAAC,2CAA2C,CAAC,CAAC;AACrE,UAAM,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;GAC1E,CAAC,CAAC;;AAEH,IAAE,CAAC,aAAa,EAAC,YAAW;AAC1B,QAAI,MAAM,GAAG,IAAI,MAAM,CAAC,4CAA4C,CAAC,CAAC;AACtE,UAAM,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;GAC5E,CAAC,CAAC;CACJ,CAAC,CAAC","file":"crypto-square.spec-compiled.js","sourcesContent":["var Crypto = require('./crypto-square');\n\ndescribe('Crypto',function() {\n  it('normalize strange characters',function() {\n    var crypto = new Crypto('s#$%^&plunk');\n    expect(crypto.normalizePlaintext()).toEqual('splunk');\n  });\n\n  it('normalize numbers',function() {\n    var crypto = new Crypto('1, 2, 3 GO!');\n    expect(crypto.normalizePlaintext()).toEqual('123go');\n  });\n\n  it('size of small square',function() {\n    var crypto = new Crypto('1234');\n    expect(crypto.size()).toEqual(2);\n  });\n\n  it('size of small square with additional non-nuber chars',function() {\n    var crypto = new Crypto('1 2 3 4');\n    expect(crypto.size()).toEqual(2);\n  });\n\n  it('size of slightly larger square',function() {\n    var crypto = new Crypto('123456789');\n    expect(crypto.size()).toEqual(3);\n  });\n\n  it('size of non-perfect square',function() {\n    var crypto = new Crypto('123456789abc');\n    expect(crypto.size()).toEqual(4);\n  });\n\n  it('plain text segments',function() {\n    var crypto = new Crypto('Never vex thine heart with idle woes');\n    expect(crypto.plaintextSegments()).toEqual(['neverv', 'exthin', 'eheart', 'withid', 'lewoes']);\n  });\n\n  it('plain text segments',function() {\n    var crypto = new Crypto('ZOMG! ZOMBIES!!!');\n    expect(crypto.plaintextSegments()).toEqual(['zomg', 'zomb', 'ies']);\n  });\n\n  it('cipher text',function() {\n    var crypto = new Crypto('Time is an illusion. Lunchtime doubly so.');\n    expect(crypto.ciphertext()).toEqual('tasneyinicdsmiohooelntuillibsuuml');\n  });\n\n  it('cipher text',function() {\n    var crypto = new Crypto('We all know interspecies romance is weird.');\n    expect(crypto.ciphertext()).toEqual('wneiaweoreneawssciliprerlneoidktcms');\n  });\n});\n"]}