{"version":3,"sources":["pig-latin.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,GAAG,SAAX,QAAQ,GAAa,EAAE,CAAC;;AAE5B,IAAI,mBAAmB,GAAG,SAAtB,mBAAmB,CAAY,IAAI,EAAC;AACvC,QAAO,IAAI,GAAC,IAAI,CAAC;CACjB,CAAC;;AAEF,IAAI,uBAAuB,GAAG,SAA1B,uBAAuB,CAAY,IAAI,EAAC;AAC3C,KAAI,MAAM,CAAC;AACX,KAAI,MAAM,GAAC,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;AAChD,OAAM,GAAG,MAAM,GAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACjD,KAAI,MAAM,GAAC,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;AAChD,OAAM,GAAG,MAAM,GAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACjD,KAAI,MAAM,GAAC,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;AACjD,OAAM,GAAG,MAAM,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACnD,KAAI,CAAC,MAAM,EAAC;AACX,QAAM,GAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,IAAI,CAAC,MAAM,CAAC,GAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC;EACtD;AACD,QAAO,MAAM,CAAC;CACd,CAAC;;AAEF,IAAI,UAAU,GAAG,SAAb,UAAU,CAAY,IAAI,EAAE,MAAM,EAAC;AACtC,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAE,MAAM,CAAC,MAAM,AAAC,CAAC,GAAC,MAAM,GAAC,IAAI,CAAE;CAC7E,CAAC;;AAEF,QAAQ,CAAC,SAAS,CAAC,SAAS,GAAG,UAAS,OAAO,EAAC;AAC/C,KAAI,YAAY,GAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACpC,KAAI,QAAQ,GAAC,EAAE,CAAC;AAChB,aAAY,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC;AAClC,MAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;EACrH,CAAC,CAAC;AACH,QAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC1B,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAC,IAAI,QAAQ,EAAE,CAAC","file":"pig-latin-compiled.js","sourcesContent":["var PigLatin = function(){};\n\nvar translateVowelStart = function(word){\n\treturn word+'ay';\t\n};\n\nvar translateConsonantStart = function(word){\n\tvar result;\n\tvar quCase=word.match(new RegExp(/^\\w{0,1}qu/));\n\tquCase ? result=getPigWord(word, quCase[0]) : {};\n\tvar chCase=word.match(new RegExp(/^\\w{0,1}ch/));\n\tchCase ? result=getPigWord(word, chCase[0]) : {};\n\tvar thCase=word.match(new RegExp(/^th[r]{0,1}/));\n\tthCase ? result = getPigWord(word, thCase[0]) : {};\n\tif (!result){\n\t\tresult=word.substr(1,word.length)+word.charAt(0)+'ay';\n\t}\n\treturn result;\n};\n\nvar getPigWord = function(word, suffix){\n\treturn (word.substr(suffix.length, word.length-(suffix.length))+suffix+'ay');\n};\n\nPigLatin.prototype.translate = function(english){\n\tvar englishWords=english.split(' ');\n\tvar pigWords=[];\n\tenglishWords.forEach(function(word){\n\t\tword.match(/^[a,e,i,o,u]/) ? pigWords.push(translateVowelStart(word)) : pigWords.push(translateConsonantStart(word));\n\t});\n\treturn pigWords.join(' ');\n};\n\nmodule.exports=new PigLatin();"]}